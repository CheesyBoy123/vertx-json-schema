# OpenAPI version identifier - required for OpenAPI 3.0 domains
openapi: 3.0.3
info:
  title: DotAAS Part 2 | API | Schemas
  description: The schemas implementing Details of the Asset Administration Shell Part 2
  contact:
    name: Constantin Ziesche, Andreas Orzelski, Florian Krebs, Bastian RÃ¶ssl, Manuel Sauer, Jens Vialkowitsch, Michael Hoffmeister, Torben Miny, Sebastian Bader, Marko Ristin, Nico Braunisch
  version: V3.0
  termsOfService: https://github.com/admin-shell-io/aas-specs
paths:
  /hodor:
    get:
      operationId: Lol
      responses:
        default:
          description: Hodor
          content:
            application/json:
              schema:
                type: object
components:
  parameters:
    Level:
      name: level
      in: query
      description: Determines the structural depth of the respective resource content
      required: false
      schema:
        type: string
        default: deep
        enum:
          - deep
          - core
    Content:
      name: content
      in: query
      description: Determines the request or response kind of the resource
      required: false
      schema:
        type: string
        default: normal
        enum:
          - normal
          - metadata
          - value
          - reference
          - path
    Extent:
      name: extent
      in: query
      description: Determines to which extent the resource is being serialized
      required: false
      schema:
        type: string
        enum:
          - withBlobValue
          - withoutBlobValue
    SemanticId:
      name: semanticId
      in: query
      description: The value of the semantic id reference (BASE64-URL-encoded)
      schema:
        type: string
        maxLength: 3072
    From:
      name: from
      in: query
      description: A non-negative number defining the offset item. # TODO
      required: false
      schema:
        type: integer
        minimum: 0
        default: 0
    Size:
      name: size
      in: query
      description: The maximum number of elements in the response array.
      required: false
      schema:
        type: integer
        minimum: 0
    Sort:
      name: sort
      in: query
      description: The sorting pattern which shall be applied. A combination of <attribute>:<direction> is used where <attribute> is an attribute of the AAS element and <direction> is either ascending ('asc') or descending ('dsc'). Note that not all possible AAS attributes are allowed for sorting.
      required: false
      schema:
        type: string
        default: id:asc
        enum:
          - id:asc
          - id:dsc
          - idShort:asc
          - idShort:dsc
          - displayName:asc
          - displayName:dsc
    SortShells:
      name: sort
      in: query
      description: The sorting pattern which shall be applied. A combination of <attribute>:<direction> is used where <attribute> is an attribute of the AAS element and <direction> is either ascending ('asc') or descending ('dsc'). Note that not all possible AAS attributes are allowed for sorting.
      required: false
      schema:
        type: string
        default: id:asc
        enum:
          - id:asc
          - id:dsc
          - idShort:asc
          - idShort:dsc
          - displayName:asc
          - displayName:dsc
          - globalAssetId:asc
          - globalAssetId:dsc
    SortSubmodelElements:
      name: sort
      in: query
      description: The sorting pattern which shall be applied. A combination of <attribute>:<direction> is used where <attribute> is an attribute of the submodel element and <direction> is either ascending ('asc') or descending ('dsc'). Note that not all possible AAS attributes are allowed for sorting.
      required: false
      schema:
        type: string
        enum:
          - idShort:asc
          - idShort:dsc
          - displayName:asc
          - displayName:dsc
    SortAssetAdministrationShellDescriptors:
      name: sort
      in: query
      description: The sorting pattern which shall be applied. A combination of <attribute>:<direction> is used where <attribute> is an attribute of the AAS element and <direction> is either ascending ('asc') or descending ('dsc'). Note that not all possible AAS attributes are allowed for sorting.
      required: false
      schema:
        type: string
        default: id:asc
        enum:
          - id:asc
          - id:dsc
          - idShort:asc
          - idShort:dsc
          - displayName:asc
          - displayName:dsc
          - globalAssetId:asc
          - globalAssetId:dsc
    SortAasIdentifiers:
      name: sort
      in: query
      description: The sorting pattern which shall be applied. A combination of <attribute>:<direction> is used where <attribute> is an attribute of the AAS element and <direction> is either ascending ('asc') or descending ('dsc'). Note that not all possible AAS attributes are allowed for sorting.
      required: false
      schema:
        type: string
        default: aasIdentifier:asc
        enum:
          - aasIdentifier:asc
          - aasIdentifier:dsc
    SortPackages:
      name: sort
      in: query
      description: The sorting pattern which shall be applied. A combination of <attribute>:<direction> is used where <attribute> is an attribute of the AAS element and <direction> is either ascending ('asc') or descending ('dsc'). Note that not all possible AAS attributes are allowed for sorting.
      required: false
      schema:
        type: string
        default: packageId:asc
        enum:
          - packageId:asc
          - packageId:dsc
  schemas:
    AssetAdministrationShellDescriptor:
      allOf:
        - $ref: "#/components/schemas/Descriptor"
        - properties:
            administration:
              $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0#/components/schemas/AdministrativeInformation"
            description:
              type: array
              items:
                $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0#/components/schemas/LangString"
            displayName:
              type: array
              items:
                $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0#/components/schemas/LangString"
            globalAssetId:
              type: string
              maxLength: 2000 # TODO Identifier
            idShort:
              type: string
              maxLength: 128
            id:
              type: string # TODO Identifier
              maxLength: 2000
            specificAssetIds:
              $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0#/components/schemas/SpecificAssetId"
            submodelDescriptors:
              items:
                $ref: "#/components/schemas/SubmodelDescriptor"
              type: array
      required:
        - id
        - endpoints
      type: object
      example: '{ "id": "https://example.org/aas/motor", "endpoints": [ { "protocolInformation": { "endpointAddress": "https://localhost:1234", "endpointProtocolVersion": "1.1" }, "interface": "AAS-1.0" }, { "protocolInformation": { "endpointAddress": "opc.tcp://localhost:4840" }, "interface": "AAS-1.0" }, { "protocolInformation": { "endpointAddress": "https://localhost:5678", "endpointProtocolVersion": "1.1", "subprotocol": "OPC UA Basic SOAP", "subprotocolBody": "ns=2;s=MyAAS", "subprotocolBodyEncoding": "application/soap+xml" }, "interface": "AAS-1.0" } ] }'
    Descriptor:
      example: '{ "endpoints": [ { "protocolInformation": { "endpointAddress": "https://localhost:1234", "endpointProtocolVersion": "1.1" }, "interface": "AAS-1.0" }, { "protocolInformation": { "endpointAddress": "opc.tcp://localhost:4840" }, "interface": "AAS-1.0" }, { "protocolInformation": { "endpointAddress": "https://localhost:5678", "endpointProtocolVersion": "1.1", "subprotocol": "OPC UA Basic SOAP", "subprotocolBody": "ns=2;s=MyAAS", "subprotocolBodyEncoding": "application/soap+xml" }, "interface": "AAS-1.0" } ] }'
      properties:
        endpoints:
          items:
            $ref: "#/components/schemas/Endpoint"
          type: array
      type: object
    Endpoint:
      properties:
        interface:
          type: string
          maxLength: 128
        protocolInformation:
          $ref: "#/components/schemas/ProtocolInformation"
      required:
        - protocolInformation
        - interface
      type: object
    ExecutionState:
      enum:
        - Initiated
        - Running
        - Completed
        - Canceled
        - Failed
        - Timeout
      type: string
    FileBlobValue:
      properties:
        contentType:
          type: string
          maxLength: 100
        value:
          type: string
      required:
        - contentType
        - value
      type: object
    SpecificAssetIdValue:
      type: object
      description: Since patternProperties and propertyNames are not supported by OpenApi yet, the ValueOnly serialization for this elements works with the key-attribute as the JSON-property name and the value-attribute as the corresponding value.
    Message: # TODO correlationId missing
      properties:
        code:
          type: string
          maxLength: 8
        messageType:
          enum:
            - Undefined
            - Info
            - Warning
            - Error
            - Exception
          type: string
        text:
          type: string
        timestamp:
          type: string
      type: object
    MultiLanguagePropertyValue:
      type: object
      description: Since patternProperties and propertyNames are not supported by OpenApi yet, the ValueOnly serialization for this elements works with the key-attribute as the JSON-property name and the value-attribute as the corresponding value.
    NumberValue:
      type: number
    OperationHandle:
      properties:
        handleId:
          type: string
          maxLength: 128
        requestId:
          type: string
          maxLength: 128
      type: object
    OperationRequest:
      properties:
        inoutputArguments:
          items:
            $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0#/components/schemas/OperationVariable"
          type: array
        inputArguments:
          items:
            $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0#/components/schemas/OperationVariable"
          type: array
        requestId:
          type: string
          maxLength: 128
        timeout:
          type: integer
      type: object
    OperationResult:
      properties:
        executionResult:
          $ref: "#/components/schemas/Result"
        executionState:
          $ref: "#/components/schemas/ExecutionState"
        inoutputArguments:
          items:
            $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0#/components/schemas/OperationVariable"
          type: array
        outputArguments:
          items:
            $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0#/components/schemas/OperationVariable"
          type: array
        requestId:
          type: string
          maxLength: 128
      type: object
    PackageDescription:
      properties:
        aasIds:
          items:
            type: string # TODO: Identifier
            maxLength: 2000
          type: array
        packageId:
          type: string
          maxLength: 128
      type: object
    PathItem:
      type: string
      pattern: "[A-Za-z][A-Za-z0-9_]+(\\.[A-Za-z][A-Za-z0-9_]+){0,}"
    ProtocolInformation:
      properties:
        endpointAddress:
          type: string
          maxLength: 2048
        endpointProtocol:
          type: string
          maxLength: 128
        endpointProtocolVersion:
          type: string
          maxLength: 128
        subprotocol:
          type: string
          maxLength: 128
        subprotocolBody:
          type: string
          maxLength: 128
        subprotocolBodyEncoding:
          type: string
          maxLength: 128
      required:
        - endpointAddress
      type: object
    ReferenceValue:
      type: object
      properties:
        type:
          $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0#/components/schemas/ReferenceTypes"
        keys:
          type: array
          items:
            $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0#/components/schemas/Key"
    RelationshipElementMetadata:
      allOf:
        - $ref: "#/components/schemas/SubmodelElementAttributes"
    RelationshipElementValue:
      properties:
        first:
          $ref: "#/components/schemas/ReferenceValue"
        second:
          $ref: "#/components/schemas/ReferenceValue"
      required:
        - first
        - second
      type: object
    Result:
      properties:
        messages:
          items:
            $ref: "#/components/schemas/Message"
          type: array
        success:
          type: boolean
      type: object
    StringValue:
      type: string
      maxLength: 1024 # TODO check during metamodel validation?
    SubmodelDescriptor:
      allOf:
        - $ref: "#/components/schemas/Descriptor"
      properties:
        administration:
          $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0#/components/schemas/AdministrativeInformation"
        description:
          type: array
          items:
            $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0#/components/schemas/LangString"
        displayName:
          type: array
          items:
            $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0#/components/schemas/LangString"
        idShort:
          type: string
          maxLength: 128
        id:
          type: string # TODO Identifier
        semanticId:
          $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0#/components/schemas/Reference"
      required:
        - id
        - endpoints
      type: object
      example: '{ "id": "https://admin-shell.io/zvei/nameplate/1/0/Nameplate", "endpoints": [ { "protocolInformation": { "endpointAddress": "https://localhost:1234", "endpointProtocolVersion": "1.1" }, "interface": "AAS-1.0" }, { "protocolInformation": { "endpointAddress": "opc.tcp://localhost:4840" }, "interface": "AAS-1.0" }, { "protocolInformation": { "endpointAddress": "https://localhost:5678", "endpointProtocolVersion": "1.1", "subprotocol": "OPC UA Basic SOAP", "subprotocolBody": "ns=2;s=MyAAS", "subprotocolBodyEncoding": "application/soap+xml" }, "interface": "AAS-1.0" } ] }'
    SubmodelElementAttributes:
      allOf:
        - $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0#/components/schemas/Referable"
        - $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0#/components/schemas/HasDataSpecification"
        - $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0#/components/schemas/HasSemantics"
        - $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0#/components/schemas/Qualifiable"
        - $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0#/components/schemas/HasKind"
    SubmodelValue:
      properties:
        submodelElements:
          type: array
          items:
            $ref: 'https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0#/components/schemas/SubmodelElement'
          minItems: 1
    ValueOnly:
      description: "The ValueOnly serialization of submodel elements (patternProperties and propertyNames will be supported propably with OpenApi 3.1). The full description of the generic JSON validation schema for the ValueOnly-serialization can be found in chapter 9.4.3 in Details of the Asset Administration Shell Part 2.\n"
      type: object
